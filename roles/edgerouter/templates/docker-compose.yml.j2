version: "3.9"

secrets:
  authelia_redis_password:
    external: true
  authelia_jwt:
    external: true
  authelia_session:
    external: true
  auehtlia_postgres_pw:
    external: true

services:

  authelia:
    image: authelia/authelia
    secrets:
      - authelia_jwt
      - authelia_session
      - authelia_redis_password
      - auehtlia_postgres_pw
    volumes:
      - {{ edgerouter_volume_path }}/authelia/config:/config
    networks:
      - traefik_int
    environment:
      - AUTHELIA_JWT_SECRET_FILE=/run/secrets/authelia_jwt
      - AUTHELIA_SESSION_SECRET_FILE=/run/secrets/authelia_session
      - AUTHELIA_SESSION_REDIS_PASSWORD_FILE=/run/secrets/authelia_redis_password
      - AUTHELIA_STORAGE_POSTGRES_PASSWORD_FILE=/run/secrets/auehtlia_postgres_pw
      - "TZ={{ TIME_ZONE }}"
    deploy:
      update_config:
        parallelism: 1
        max_failure_ratio: 0
        failure_action: rollback
      labels:
        - traefik.enable=true
        - traefik.http.routers.authelia.rule=Host(`auth.{{ DOMAINNAME }}`)
        - traefik.http.routers.authelia.entrypoints=websecure
        - traefik.http.routers.authelia.tls=true
        - traefik.http.routers.authelia.tls.certresolver=myresolver
        - traefik.http.routers.authelia.middlewares=secheader@file
        - traefik.http.services.authelia.loadbalancer.server.port=9091 #9091
        - "traefik.docker.network={{ stack_name }}_traefik_int"

  authelia_postgres:
    image: postgres
    secrets:
      - auehtlia_postgres_pw
    networks:
      - traefik_int
    volumes:
      - {{ edgerouter_volume_path }}/postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/auehtlia_postgres_pw
      - POSTGRES_USER=authelia
      - "TZ={{ TIME_ZONE }}"
    deploy:
      update_config:
        parallelism: 1
        max_failure_ratio: 0
        failure_action: rollback


  authelia_redis:
    image: "redis:alpine"
    secrets:
      - authelia_redis_password
    volumes:
      - {{ edgerouter_volume_path }}/redis/data:/redis_data
      - {{ edgerouter_volume_path }}/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command:
      [
        "sh",
        "-c",
        'redis-server /usr/local/etc/redis/redis.conf --appendonly yes --requirepass "$$(cat /run/secrets/authelia_redis_password)"',
      ]
    networks:
      - traefik_int
    environment:
      - REDIS_REPLICATION_MODE=master
      - "TZ={{ TIME_ZONE }}"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]


  dockerproxy_traefik:
    image: tecnativa/docker-socket-proxy
    networks:
      - traefik_sock
    deploy:
      update_config:
        parallelism: 1
        max_failure_ratio: 0
        failure_action: rollback
      placement:
        constraints:
          - node.role == manager

    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      TZ: "{{ TIME_ZONE }}"
      LOG_LEVEL: info # debug,info,notice,warning,err,crit,alert,emerg
      CONTAINERS: 1
      NETWORKS: 1
      SERVICES: 1
      TASKS: 1

  traefik:
    hostname: traefik
    image: traefik:2.3
    logging:
      driver: json-file
      options:
        'max-size': '10m'
        'max-file': '5'
    volumes:
      - "{{ edgerouter_volume_path }}/traefik/:/etc/traefik/"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - traefik_sock
      - traefik_int
      - {{ EDGE_Network_Name }}
    environment:
      - "TZ={{ TIME_ZONE }}"
    deploy:
      update_config:
        parallelism: 1
        max_failure_ratio: 0
        failure_action: rollback
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        # Traefik Dashboard
        - traefik.http.routers.traefik-local.entrypoints=websecure
        - traefik.http.routers.traefik-local.rule=Host(`traefik.{{ DOMAINNAME }}`)
        - traefik.http.routers.traefik-local.service=api@internal
        - traefik.http.routers.traefik-local.middlewares=authelia@file,secheader@file
        - traefik.http.routers.traefik-local.tls=true
        - traefik.docker.network={{ EDGE_Network_Name }}
        - traefik.http.routers.traefik-local.tls.certresolver=myresolver
        - traefik.http.services.traefik-local.loadbalancer.server.port=8080
        - traefik.http.services.traefik-local.loadbalancer.server.scheme=http


  public:
    image: traefik/whoami
    networks:
      - {{ EDGE_Network_Name }}
    environment:
      - "TZ={{ TIME_ZONE }}"
    deploy:
      update_config:
        parallelism: 1
        max_failure_ratio: 0
        failure_action: rollback
      labels:
        - traefik.enable=true
        - traefik.http.routers.public.rule=Host(`public.{{ DOMAINNAME }}`)
        - traefik.http.routers.public.entrypoints=websecure
        - traefik.http.services.public.loadbalancer.server.port=80
        - traefik.http.routers.public.tls=true
        - traefik.http.routers.public.tls.certresolver=myresolver
        - traefik.http.routers.public.middlewares=authelia@file,secheader@file

networks:
  traefik_sock:
    driver: overlay
    attachable: false
    driver_opts:
      encrypted: "true"
  {{ EDGE_Network_Name }}:
    external: true
    name: {{ EDGE_Network_Name }}
  traefik_int:
    driver: overlay
    attachable: false
    driver_opts:
      encrypted: "true"
